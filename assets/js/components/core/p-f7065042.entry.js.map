{"version":3,"names":["govFormSelectCss","GovFormSelect","constructor","hostRef","this","h","govHost","host","f","govForm","selectId","createID","validateVariant","newValue","validateProp","FormSelectVariants","FormSelectClass","root","validateSize","FormSelectSizes","watchDisabled","passControlAttrs","watchValue","markSelectedValue","passAttrToControl","size","toBoolAttr","invalid","componentWillLoad","variant","passAttrToLabel","String","required","componentDidRender","canValidateWcagOnRender","delay","validateWcag","querySelectorAll","forEach","option","value","setAttribute","removeAttribute","render","Host","class","hasSlot","name","slot","success","id","identifier","onFocus","onFocusHandler","bind","onChange","onChangeHandler","onBlur","onBlurHandler","disabled","ref","el","selectRef","toBoolAttrIfDefined","wcagActiveDescendant","wcagControls","wcagDescribedBy","wcagLabelledBy","wcagOwns","options","map","selected","label","e","focused","govFocus","emit","component","originalEvent","govBlur","target","stopPropagation","govChange","setFocus","focus","setValue","getRef","setOptions","Array","isArray","validateWcagRef","validateWcagLabelFor"],"sources":["../../../packages/core/src/components/gov-form/select/gov-form-select.scss?tag=gov-form-select","../../../packages/core/src/components/gov-form/select/gov-form-select.tsx"],"sourcesContent":["/*\n *   Select\n */\n\n@import \"../select/gov-form-select-core.scss\";\n\n$class: \".gov-form-select\";\n\n#{$class} {\n\t@extend %form-select-core;\n}\n","import {Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch} from '@stencil/core'\nimport {govForm} from '../../../helpers/Dom/form'\nimport {GovForm} from '../../../helpers/Dom/form.types'\nimport {govHost, toBoolAttr, toBoolAttrIfDefined} from '../../../helpers/Dom/template'\nimport {GovHost} from '../../../helpers/Dom/template.types'\nimport {canValidateWcagOnRender} from '../../../helpers/Dom/win'\nimport {validateProp} from '../../../helpers/Validate/props'\nimport {validateWcagLabelFor, validateWcagRef} from '../../../helpers/Validate/wcag'\nimport {createID} from '../../../utils/string.utils'\nimport {delay} from '../../../utils/utils'\nimport {\n\tFormSelectClass,\n\tFormSelectSizes,\n\tFormSelectSizesType,\n\tFormSelectVariants,\n\tFormSelectVariantType\n} from './constants'\nimport {FormSelectEvent, FormSelectOption} from './gov-form-select.types'\n\n@Component({\n\ttag: 'gov-form-select',\n\tstyleUrl: 'gov-form-select.scss',\n})\nexport class GovFormSelect {\n\tprivate f: GovForm\n\tprivate readonly h: GovHost\n\tprivate selectRef?: HTMLSelectElement\n\n\tprivate readonly selectId: string\n\n\tconstructor() {\n\t\tthis.h = govHost(this.host)\n\t\tthis.f = govForm(this.h)\n\t\tthis.selectId = createID('GovSelect')\n\t}\n\n\t@Element() host: HTMLGovFormSelectElement\n\t/**\n\t * Value of select\n\t */\n\t@Prop({reflect: true, mutable: true}) value: string\n\t/**\n\t * Custom select identifier.\n\t */\n\t@Prop({attribute: 'identifier'}) readonly identifier: string\n\t/**\n\t * Style variation of the form select.\n\t */\n\t@Prop() readonly variant?: FormSelectVariantType = 'secondary'\n\t/**\n\t * Select’s size.\n\t */\n\t@Prop() readonly size?: FormSelectSizesType = 'm'\n\t/**\n\t * Name of the select.\n\t */\n\t@Prop() readonly name: string\n\t/**\n\t * Set whether the input is required or not. Please note that this is necessary for accessible inputs when the user is required to fill them.\n\t * When using this property you need to also set “novalidate” attribute to your form element to prevent browser from displaying its own validation errors.\n\t */\n\t@Prop() readonly required: boolean = false\n\t/**\n\t * Indicates the entered value of child form element does conform to the format expected by the application.\n\t */\n\t@Prop() readonly success: boolean\n\t/**\n\t * Makes the select component disabled.\n\t * This prevents users from being able to interact with the select, and conveys its inactive state to assistive technologies.\n\t */\n\t@Prop() readonly disabled: boolean = false\n\t/**\n\t * Indicates the entered value does not conform to the format expected by the application.\n\t */\n\t@Prop() readonly invalid: boolean\n\t/**\n\t * Indicates the id of a related component’s visually focused element.\n\t */\n\t@Prop({attribute: 'wcag-active-descendant'}) readonly wcagActiveDescendant: string\n\t/**\n\t * Use this prop to add an aria-controls attribute. Use the attribute to indicate the id of a component controlled by this component.\n\t */\n\t@Prop({attribute: 'wcag-controls'}) readonly wcagControls: string\n\t/**\n\t * Indicates the id of a component that describes the input.\n\t */\n\t@Prop({attribute: 'wcag-described-by'}) readonly wcagDescribedBy: string\n\t/**\n\t * Indicates the id of a component that labels the input.\n\t */\n\t@Prop({attribute: 'wcag-labelled-by'}) readonly wcagLabelledBy: string\n\t/**\n\t * Indicates the id of a component that describes the input.\n\t */\n\t@Prop({attribute: 'wcag-owns'}) readonly wcagOwns: string\n\t/**\n\t * Emitted when the select has focus.\n\t */\n\t@Event({eventName: 'gov-focus'}) govFocus: EventEmitter<FormSelectEvent>\n\t/**\n\t * Emitted when the select loses focus.\n\t */\n\t@Event({eventName: 'gov-blur'}) govBlur: EventEmitter<FormSelectEvent>\n\t/**\n\t * Emitted when the select change value.\n\t */\n\t@Event({eventName: 'gov-change'}) govChange: EventEmitter<FormSelectEvent>\n\t@State() focused: boolean\n\t@State() options: FormSelectOption[] = []\n\n\t@Watch('variant')\n\tvalidateVariant(newValue: string): void {\n\t\tvalidateProp(FormSelectVariants, newValue, FormSelectClass.root)\n\t}\n\n\t@Watch('size')\n\tvalidateSize(newValue: string): void {\n\t\tvalidateProp(FormSelectSizes, newValue, FormSelectClass.root)\n\t}\n\n\t@Watch('disabled')\n\t@Watch('invalid')\n\t@Watch('size')\n\twatchDisabled(): void {\n\t\tthis.passControlAttrs()\n\t}\n\n\t@Watch('value')\n\twatchValue(): void {\n\t\tthis.markSelectedValue()\n\t}\n\n\tprivate passControlAttrs() {\n\t\tthis.f.passAttrToControl('size', this.size)\n\t\tthis.f.passAttrToControl('invalid', toBoolAttr(this.invalid))\n\t\tthis.f.passAttrToControl('type', 'select')\n\t}\n\n\tcomponentWillLoad() {\n\t\tthis.validateVariant(this.variant)\n\t\tthis.validateSize(this.size)\n\n\t\tthis.markSelectedValue()\n\t\tthis.passControlAttrs()\n\t\tthis.f.passAttrToLabel('required', String(this.required))\n\t}\n\n\tasync componentDidRender() {\n\t\tif (canValidateWcagOnRender()) {\n\t\t\tawait delay(500)\n\t\t\tawait this.validateWcag()\n\t\t}\n\t}\n\n\tprivate markSelectedValue() {\n\t\tthis.host.querySelectorAll('option').forEach((option: HTMLOptionElement) => {\n\t\t\tif (option.value === this.value) {\n\t\t\t\toption.setAttribute('selected', 'selected')\n\t\t\t} else {\n\t\t\t\toption.removeAttribute('selected')\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Host class={FormSelectClass.root} size={this.size} variant={this.variant}>\n\t\t\t\t{this.h.hasSlot('prefix') && <slot name=\"prefix\"></slot>}\n\t\t\t\t<span class=\"element\">\n\t\t\t\t\t<gov-icon slot=\"right-icon\" name=\"chevron-down\" class=\"icon-arrow\"></gov-icon>\n\t\t\t\t\t{this.h.hasSlot('right-icon') && !(this.success || this.invalid) && <slot name=\"right-icon\"/>}\n\t\t\t\t\t{this.success && <gov-icon slot=\"right-icon\" class=\"icon-validation\" name=\"check-lg\"></gov-icon>}\n\t\t\t\t\t{this.invalid && <gov-icon slot=\"right-icon\" class=\"icon-validation\" name=\"exclamation-lg\"></gov-icon>}\n\t\t\t\t\t<select\n\t\t\t\t\t\tid={this.identifier || this.selectId}\n\t\t\t\t\t\tonFocus={this.onFocusHandler.bind(this)}\n\t\t\t\t\t\tonChange={this.onChangeHandler.bind(this)}\n\t\t\t\t\t\tonBlur={this.onBlurHandler.bind(this)}\n\t\t\t\t\t\trequired={this.required}\n\t\t\t\t\t\tname={this.name}\n\t\t\t\t\t\tdisabled={this.disabled}\n\t\t\t\t\t\tref={el => (this.selectRef = el as HTMLSelectElement)}\n\t\t\t\t\t\taria-disabled={toBoolAttrIfDefined(this.disabled)}\n\t\t\t\t\t\taria-activedescendant={this.wcagActiveDescendant}\n\t\t\t\t\t\taria-controls={this.wcagControls}\n\t\t\t\t\t\taria-required={toBoolAttrIfDefined(this.required)}\n\t\t\t\t\t\taria-invalid={toBoolAttrIfDefined(this.invalid)}\n\t\t\t\t\t\taria-describedby={this.wcagDescribedBy}\n\t\t\t\t\t\taria-labelledby={this.wcagLabelledBy}\n\t\t\t\t\t\taria-owns={this.wcagOwns}\n\t\t\t\t\t>\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t\t{this.options.map((option) => {\n\t\t\t\t\t\t\treturn (<option value={option.value} selected={option.value === this.value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={option?.disabled}>{option.label}</option>)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t{this.h.hasSlot('sufix') && <slot name=\"sufix\"></slot>}\n\t\t\t</Host>\n\t\t)\n\t}\n\n\tprivate onFocusHandler(e: FocusEvent) {\n\t\tthis.focused = true\n\t\tthis.govFocus.emit({\n\t\t\tcomponent: FormSelectClass.root,\n\t\t\toriginalEvent: e,\n\t\t\tvalue: this.value,\n\t\t})\n\t}\n\n\tprivate onBlurHandler(e: FocusEvent) {\n\t\tthis.focused = false\n\t\tthis.govBlur.emit({\n\t\t\tcomponent: FormSelectClass.root,\n\t\t\toriginalEvent: e,\n\t\t\tvalue: this.value,\n\t\t})\n\t}\n\n\tprivate onChangeHandler(e: Event) {\n\t\tthis.value = (e.target as HTMLSelectElement).value\n\t\te.stopPropagation()\n\t\tthis.govChange.emit({\n\t\t\tcomponent: FormSelectClass.root,\n\t\t\toriginalEvent: e,\n\t\t\tvalue: this.value,\n\t\t})\n\t}\n\n\t/**\n\t * Returns the current state of the component\n\t */\n\t@Method()\n\tasync setFocus(options?: FocusOptions): Promise<void> {\n\t\treturn this.selectRef.focus(options)\n\t}\n\n\t/**\n\t * Sets the ordered value of the element\n\t */\n\t@Method()\n\tasync setValue(value: string): Promise<void> {\n\t\tthis.value = value\n\t}\n\n\t/**\n\t * Returns an instance of the native html select element\n\t */\n\t@Method()\n\tasync getRef(): Promise<HTMLSelectElement> {\n\t\treturn this.selectRef\n\t}\n\n\t/**\n\t * Sets the selection options\n\t */\n\t@Method()\n\tasync setOptions(options: FormSelectOption[]): Promise<void> {\n\t\tif (Array.isArray(options)) {\n\t\t\tthis.options = options\n\t\t}\n\t}\n\n\t/**\n\t * Validate the WCAG attributes of the component\n\t */\n\t@Method()\n\tasync validateWcag(): Promise<void> {\n\t\tvalidateWcagRef(this.wcagActiveDescendant, 'wcag-active-descendant', FormSelectClass.root)\n\t\tvalidateWcagRef(this.wcagControls, 'wcag-controls', FormSelectClass.root)\n\t\tvalidateWcagRef(this.wcagDescribedBy, 'wcag-described-by', FormSelectClass.root)\n\t\tvalidateWcagRef(this.wcagOwns, 'wcag-owns', FormSelectClass.root)\n\t\tvalidateWcagLabelFor(this.identifier || this.selectId, this.wcagLabelledBy, FormSelectClass.root)\n\t}\n}\n"],"mappings":"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"}
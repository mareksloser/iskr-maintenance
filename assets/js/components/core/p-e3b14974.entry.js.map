{"version":3,"names":["Types","IconClass","root","holder","dsVersion","version","iconCache","requestCache","isExternalUrl","path","startsWith","iconUrl","name","type","getAssetPath","async","fetchIcon","cacheKey","fetch","iconsPath","then","resp","status","text","Error","govIconCss","GovIcon","constructor","hostRef","this","h","govHost","host","loadIconPathData","visible","iconData","e","error","connectedCallback","iconsLazyLoad","finally","waitUntilVisible","disconnectedCallback","intersectionObserver","disconnect","componentWillLoad","callback","window","IntersectionObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","render","Host","class","classes","innerHTML"],"sources":["../../../packages/core/src/components/gov-icon/constants.ts","../../../packages/core/src/utils/ds.utils.ts","../../../packages/core/src/utils/icon.utils.ts","../../../packages/core/src/components/gov-icon/gov-icon.scss?tag=gov-icon","../../../packages/core/src/components/gov-icon/gov-icon.tsx"],"sourcesContent":["import { ValueOf } from '../../types/interfaces'\n\nenum Types {\n\tBASIC = 'basic',\n\tCOMPLEX = 'complex',\n\tCOLORED = 'colored',\n}\nexport type Type = `${ValueOf<typeof Types>}`\n\nexport const IconClass = {\n\troot: 'gov-icon',\n\tholder: 'gov-icon__holder',\n}\n","import { version } from '../../package.json'\n\nexport const dsVersion = (): string => {\n\treturn version\n}\n","import { getAssetPath } from \"@stencil/core\"\nimport { dsVersion } from \"./ds.utils\"\nimport { iconsPath } from \"../helpers/Dom/win\"\n\nconst iconCache: { [key: string]: string } = {}\nconst requestCache: { [key: string]: Promise<string> } = {}\n\nconst isExternalUrl = (path: string) => path.startsWith(\"http://\") || path.startsWith(\"https://\")\nconst iconUrl = (path: string, name: string, type: string) => {\n\tif (isExternalUrl(path)) {\n\t\treturn `${path}/${type}/${name}.svg?v=${dsVersion()}`\n\t}\n\treturn getAssetPath(`${path}/${type}/${name}.svg`) + `?v=${dsVersion()}`\n}\n\nexport async function fetchIcon({ name, type }: { name: string; type: string }): Promise<string> {\n\tconst cacheKey = type + \"-\" + name\n\tif (iconCache[cacheKey]) {\n\t\treturn iconCache[cacheKey]\n\t}\n\tif (!requestCache[cacheKey]) {\n\t\trequestCache[cacheKey] = fetch(iconUrl(iconsPath(), name, type)).then(resp => {\n\t\t\tif (resp.status === 200) {\n\t\t\t\treturn resp.text()\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Gov Icon doesn't exists\")\n\t\t\t}\n\t\t})\n\t}\n\tconst path = await requestCache[cacheKey]\n\ticonCache[cacheKey] = path\n\treturn path\n}\n","/*\n *   Icon\n */\n\n$class: \".gov-icon\";\n\n#{$class} {\n\tdisplay: inline-flex;\n\t&__holder {\n\t\tdisplay: inline-flex;\n\t\twidth: 100%;\n\t\theight: 100%;\n\n\t\t& + #{$class}__holder {\n\t\t\tdisplay: none !important;\n\t\t}\n\t}\n\tsvg {\n\t\tdisplay: inline-flex;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmax-width: 100%;\n\t\tmax-height: 100%;\n\t}\n}\n","import {Build, Component, Element, h, Host, Prop, State, Watch} from \"@stencil/core\"\nimport {IconClass} from \"./constants\"\nimport {fetchIcon} from \"../../utils/icon.utils\"\nimport {govHost} from \"../../helpers/Dom/template\"\nimport {GovHost} from \"../../helpers/Dom/template.types\"\nimport {iconsLazyLoad} from \"../../helpers/Dom/win\"\n\n@Component({\n  assetsDirs: [\"assets\"],\n  styleUrl: \"gov-icon.scss\",\n  tag: \"gov-icon\",\n})\nexport class GovIcon {\n  private h: GovHost\n\n  constructor() {\n    this.h = govHost(this.host)\n  }\n\n  @Element() host: HTMLGovIconElement\n  /**\n   * Name of icon\n   */\n  @Prop() name: string = null\n  /**\n   * Type (folder) of icon\n   */\n  @Prop() type: string = \"basic\"\n  @State() private iconData: string\n  @State() private visible = false\n  @State() private error = false\n  private intersectionObserver: IntersectionObserver\n\n  @Watch(\"name\")\n  private async loadIconPathData(): Promise<void> {\n    const {name, visible, type} = this\n    if (!Build.isBrowser || !name || !visible) {\n      return\n    }\n    try {\n      this.iconData = await fetchIcon({name, type})\n    } catch (e) {\n      this.error = true\n    }\n  }\n\n  connectedCallback(): void {\n    if (iconsLazyLoad()) {\n      this.visible = true\n      this.loadIconPathData().finally()\n    } else {\n      this.waitUntilVisible(async () => {\n        this.visible = true\n        await this.loadIconPathData()\n      })\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect()\n      this.intersectionObserver = null\n    }\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await this.loadIconPathData()\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    if (!Build.isBrowser || typeof window === \"undefined\" || !(window as any).IntersectionObserver) {\n      callback()\n      return\n    }\n    this.intersectionObserver = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            if (this.intersectionObserver) {\n              this.intersectionObserver.disconnect()\n              this.intersectionObserver = null\n            }\n            callback()\n          }\n        })\n      },\n      {rootMargin: \"50px\"},\n    )\n    this.intersectionObserver.observe(this.host)\n  }\n\n  render() {\n    if (this.error) {\n      return null\n    }\n    return (\n      <Host class={this.h.classes(IconClass.root)}>\n        <span class={IconClass.holder} innerHTML={this.iconData}></span>\n      </Host>\n    )\n  }\n}\n"],"mappings":"uKAEA,IAAKA,GAAL,SAAKA,GACJA,EAAA,iBACAA,EAAA,qBACAA,EAAA,oBACA,EAJD,CAAKA,MAAK,KAOH,MAAMC,EAAY,CACxBC,KAAM,WACNC,OAAQ,oB,gBCTF,MAAMC,EAAY,IACjBC,ECCR,MAAMC,EAAuC,GAC7C,MAAMC,EAAmD,GAEzD,MAAMC,EAAiBC,GAAiBA,EAAKC,WAAW,YAAcD,EAAKC,WAAW,YACtF,MAAMC,EAAU,CAACF,EAAcG,EAAcC,KAC5C,GAAIL,EAAcC,GAAO,CACxB,MAAO,GAAGA,KAAQI,KAAQD,WAAcR,K,CAEzC,OAAOU,EAAa,GAAGL,KAAQI,KAAQD,SAAc,MAAMR,KAAa,EAGlEW,eAAeC,GAAUJ,KAAEA,EAAIC,KAAEA,IACvC,MAAMI,EAAWJ,EAAO,IAAMD,EAC9B,GAAIN,EAAUW,GAAW,CACxB,OAAOX,EAAUW,E,CAElB,IAAKV,EAAaU,GAAW,CAC5BV,EAAaU,GAAYC,MAAMP,EAAQQ,IAAaP,EAAMC,IAAOO,MAAKC,IACrE,GAAIA,EAAKC,SAAW,IAAK,CACxB,OAAOD,EAAKE,M,KACN,CACN,MAAM,IAAIC,MAAM,0B,KAInB,MAAMf,QAAaF,EAAaU,GAChCX,EAAUW,GAAYR,EACtB,OAAOA,CACR,CChCA,MAAMgB,EAAa,wkB,MCYNC,EAAO,MAGlB,WAAAC,CAAAC,G,oBAQuB,K,UAIA,Q,qCAEI,M,WACF,MAdvBC,KAAKC,EAAIC,EAAQF,KAAKG,K,CAkBhB,sBAAMC,GACZ,MAAMrB,KAACA,EAAIsB,QAAEA,EAAOrB,KAAEA,GAAQgB,KAC9B,IAAyBjB,IAASsB,EAAS,CACzC,M,CAEF,IACEL,KAAKM,eAAiBnB,EAAU,CAACJ,OAAMC,Q,CACvC,MAAOuB,GACPP,KAAKQ,MAAQ,I,EAIjB,iBAAAC,GACE,GAAIC,IAAiB,CACnBV,KAAKK,QAAU,KACfL,KAAKI,mBAAmBO,S,KACnB,CACLX,KAAKY,kBAAiB1B,UACpBc,KAAKK,QAAU,WACTL,KAAKI,kBAAkB,G,EAKnC,oBAAAS,GACE,GAAIb,KAAKc,qBAAsB,CAC7Bd,KAAKc,qBAAqBC,aAC1Bf,KAAKc,qBAAuB,I,EAIhC,uBAAME,SACEhB,KAAKI,kB,CAGL,gBAAAQ,CAAiBK,GACvB,UAA+BC,SAAW,cAAiBA,OAAeC,qBAAsB,CAC9FF,IACA,M,CAEFjB,KAAKc,qBAAuB,IAAIK,sBAC9BC,IACEA,EAAQC,SAAQC,IACd,GAAIA,EAAMC,eAAgB,CACxB,GAAIvB,KAAKc,qBAAsB,CAC7Bd,KAAKc,qBAAqBC,aAC1Bf,KAAKc,qBAAuB,I,CAE9BG,G,IAEF,GAEJ,CAACO,WAAY,SAEfxB,KAAKc,qBAAqBW,QAAQzB,KAAKG,K,CAGzC,MAAAuB,GACE,GAAI1B,KAAKQ,MAAO,CACd,OAAO,I,CAET,OACEP,EAAC0B,EAAI,CAACC,MAAO5B,KAAKC,EAAE4B,QAAQzD,EAAUC,OACpC4B,EAAA,QAAM2B,MAAOxD,EAAUE,OAAQwD,UAAW9B,KAAKM,W"}
{"file":"gov-icon.entry.cjs.js","mappings":";;;;;;;;;AAEA,IAAK,KAIJ;AAJD,WAAK,KAAK;EACT,wBAAe,CAAA;EACf,4BAAmB,CAAA;EACnB,4BAAmB,CAAA;AACpB,CAAC,EAJI,KAAK,KAAL,KAAK,QAIT;AAGM,MAAM,SAAS,GAAG;EACxB,IAAI,EAAE,UAAU;EAChB,MAAM,EAAE,kBAAkB;CAC1B;;;;ACVM,MAAM,SAAS,GAAG;EACxB,OAAO,OAAO,CAAA;AACf,CAAC;;ACAD,MAAM,SAAS,GAA8B,EAAE,CAAA;AAC/C,MAAM,YAAY,GAAuC,EAAE,CAAA;AAE3D,MAAM,aAAa,GAAG,CAAC,IAAY,KAAK,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;AACjG,MAAM,OAAO,GAAG,CAAC,IAAY,EAAE,IAAY,EAAE,IAAY;EACxD,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;IACxB,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,UAAU,SAAS,EAAE,EAAE,CAAA;GACrD;EACD,OAAOA,kBAAY,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,GAAG,MAAM,SAAS,EAAE,EAAE,CAAA;AACzE,CAAC,CAAA;AAEM,eAAe,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAkC;EAC7E,MAAM,QAAQ,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAA;EAClC,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;IACxB,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAA;GAC1B;EACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;IAC5B,YAAY,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,OAAO,CAACC,aAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;MACzE,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;QACxB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAA;OAClB;WAAM;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;OAC1C;KACD,CAAC,CAAA;GACF;EACD,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAA;EACzC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAA;EAC1B,OAAO,IAAI,CAAA;AACZ;;AChCA,MAAM,UAAU,GAAG,ukBAAukB;;MCY7kB,OAAO;EAGlB;;gBAQuB,IAAI;gBAIJ,OAAO;;mBAEH,KAAK;iBACP,KAAK;IAd5B,IAAI,CAAC,CAAC,GAAGC,gBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GAC5B;EAiBO,MAAM,gBAAgB;IAC5B,MAAM,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,GAAG,IAAI,CAAA;IAClC,IAAwB,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;MACzC,OAAM;KACP;IACD,IAAI;MACF,IAAI,CAAC,QAAQ,GAAG,MAAM,SAAS,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAA;KAC9C;IAAC,OAAO,CAAC,EAAE;MACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;KAClB;GACF;EAED,iBAAiB;IACf,IAAIC,iBAAa,EAAE,EAAE;MACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;MACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,EAAE,CAAA;KAClC;SAAM;MACL,IAAI,CAAC,gBAAgB,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;QACnB,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAA;OAC9B,CAAC,CAAA;KACH;GACF;EAED,oBAAoB;IAClB,IAAI,IAAI,CAAC,oBAAoB,EAAE;MAC7B,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAA;MACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAA;KACjC;GACF;EAED,MAAM,iBAAiB;IACrB,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAA;GAC9B;EAEO,gBAAgB,CAAC,QAAoB;IAC3C,IAAwB,OAAO,MAAM,KAAK,WAAW,IAAI,CAAE,MAAc,CAAC,oBAAoB,EAAE;MAC9F,QAAQ,EAAE,CAAA;MACV,OAAM;KACP;IACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,CAClD,OAAO;MACL,OAAO,CAAC,OAAO,CAAC,KAAK;QACnB,IAAI,KAAK,CAAC,cAAc,EAAE;UACxB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAA;YACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAA;WACjC;UACD,QAAQ,EAAE,CAAA;SACX;OACF,CAAC,CAAA;KACH,EACD,EAAC,UAAU,EAAE,MAAM,EAAC,CACrB,CAAA;IACD,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GAC7C;EAED,MAAM;IACJ,IAAI,IAAI,CAAC,KAAK,EAAE;MACd,OAAO,IAAI,CAAA;KACZ;IACD,QACEC,QAACC,UAAI,IAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IACzCD,kBAAM,KAAK,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAS,CAC3D,EACR;GACF;;;;;;;;;;;","names":["getAssetPath","iconsPath","govHost","iconsLazyLoad","h","Host"],"sources":["../../../packages/core/src/components/gov-icon/constants.ts","../../../packages/core/src/utils/ds.utils.ts","../../../packages/core/src/utils/icon.utils.ts","../../../packages/core/src/components/gov-icon/gov-icon.scss?tag=gov-icon","../../../packages/core/src/components/gov-icon/gov-icon.tsx"],"sourcesContent":["import { ValueOf } from '../../types/interfaces'\n\nenum Types {\n\tBASIC = 'basic',\n\tCOMPLEX = 'complex',\n\tCOLORED = 'colored',\n}\nexport type Type = `${ValueOf<typeof Types>}`\n\nexport const IconClass = {\n\troot: 'gov-icon',\n\tholder: 'gov-icon__holder',\n}\n","import { version } from '../../package.json'\n\nexport const dsVersion = (): string => {\n\treturn version\n}\n","import { getAssetPath } from \"@stencil/core\"\nimport { dsVersion } from \"./ds.utils\"\nimport { iconsPath } from \"../helpers/Dom/win\"\n\nconst iconCache: { [key: string]: string } = {}\nconst requestCache: { [key: string]: Promise<string> } = {}\n\nconst isExternalUrl = (path: string) => path.startsWith(\"http://\") || path.startsWith(\"https://\")\nconst iconUrl = (path: string, name: string, type: string) => {\n\tif (isExternalUrl(path)) {\n\t\treturn `${path}/${type}/${name}.svg?v=${dsVersion()}`\n\t}\n\treturn getAssetPath(`${path}/${type}/${name}.svg`) + `?v=${dsVersion()}`\n}\n\nexport async function fetchIcon({ name, type }: { name: string; type: string }): Promise<string> {\n\tconst cacheKey = type + \"-\" + name\n\tif (iconCache[cacheKey]) {\n\t\treturn iconCache[cacheKey]\n\t}\n\tif (!requestCache[cacheKey]) {\n\t\trequestCache[cacheKey] = fetch(iconUrl(iconsPath(), name, type)).then(resp => {\n\t\t\tif (resp.status === 200) {\n\t\t\t\treturn resp.text()\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Gov Icon doesn't exists\")\n\t\t\t}\n\t\t})\n\t}\n\tconst path = await requestCache[cacheKey]\n\ticonCache[cacheKey] = path\n\treturn path\n}\n","/*\n *   Icon\n */\n\n$class: \".gov-icon\";\n\n#{$class} {\n\tdisplay: inline-flex;\n\t&__holder {\n\t\tdisplay: inline-flex;\n\t\twidth: 100%;\n\t\theight: 100%;\n\n\t\t& + #{$class}__holder {\n\t\t\tdisplay: none !important;\n\t\t}\n\t}\n\tsvg {\n\t\tdisplay: inline-flex;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmax-width: 100%;\n\t\tmax-height: 100%;\n\t}\n}\n","import {Build, Component, Element, h, Host, Prop, State, Watch} from \"@stencil/core\"\nimport {IconClass} from \"./constants\"\nimport {fetchIcon} from \"../../utils/icon.utils\"\nimport {govHost} from \"../../helpers/Dom/template\"\nimport {GovHost} from \"../../helpers/Dom/template.types\"\nimport {iconsLazyLoad} from \"../../helpers/Dom/win\"\n\n@Component({\n  assetsDirs: [\"assets\"],\n  styleUrl: \"gov-icon.scss\",\n  tag: \"gov-icon\",\n})\nexport class GovIcon {\n  private h: GovHost\n\n  constructor() {\n    this.h = govHost(this.host)\n  }\n\n  @Element() host: HTMLGovIconElement\n  /**\n   * Name of icon\n   */\n  @Prop() name: string = null\n  /**\n   * Type (folder) of icon\n   */\n  @Prop() type: string = \"basic\"\n  @State() private iconData: string\n  @State() private visible = false\n  @State() private error = false\n  private intersectionObserver: IntersectionObserver\n\n  @Watch(\"name\")\n  private async loadIconPathData(): Promise<void> {\n    const {name, visible, type} = this\n    if (!Build.isBrowser || !name || !visible) {\n      return\n    }\n    try {\n      this.iconData = await fetchIcon({name, type})\n    } catch (e) {\n      this.error = true\n    }\n  }\n\n  connectedCallback(): void {\n    if (iconsLazyLoad()) {\n      this.visible = true\n      this.loadIconPathData().finally()\n    } else {\n      this.waitUntilVisible(async () => {\n        this.visible = true\n        await this.loadIconPathData()\n      })\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect()\n      this.intersectionObserver = null\n    }\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await this.loadIconPathData()\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    if (!Build.isBrowser || typeof window === \"undefined\" || !(window as any).IntersectionObserver) {\n      callback()\n      return\n    }\n    this.intersectionObserver = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            if (this.intersectionObserver) {\n              this.intersectionObserver.disconnect()\n              this.intersectionObserver = null\n            }\n            callback()\n          }\n        })\n      },\n      {rootMargin: \"50px\"},\n    )\n    this.intersectionObserver.observe(this.host)\n  }\n\n  render() {\n    if (this.error) {\n      return null\n    }\n    return (\n      <Host class={this.h.classes(IconClass.root)}>\n        <span class={IconClass.holder} innerHTML={this.iconData}></span>\n      </Host>\n    )\n  }\n}\n"],"version":3}
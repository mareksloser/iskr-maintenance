{"file":"gov-form-group.entry.cjs.js","mappings":";;;;;;;;;;;;AAIO,MAAM,cAAc,GAAGA,UAAI,CAACC,WAAK,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAG5E,IAAY,oBAGX;AAHD,WAAY,oBAAoB;EAC/B,iDAAyB,CAAA;EACzB,6CAAqB,CAAA;AACtB,CAAC,EAHW,oBAAoB,KAApB,oBAAoB,QAG/B;AAGM,MAAM,cAAc,GAAG;EAC7B,IAAI,EAAE,gBAAgB;CACtB;;ACfD,MAAM,eAAe,GAAG,6zBAA6zB;;MCgBx0B,YAAY;EAGvB;;eAQ4C,SAAS;uBAIK,UAAU;IAXlE,IAAI,CAAC,CAAC,GAAGC,gBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GAC5B;EAaD,WAAW,CAAC,QAAgB;IAC1B,IAAI,QAAQ,EAAE;MACZC,kBAAY,CAAC,cAAc,EAAE,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,CAAA;KAC5D;GACF;EAGD,mBAAmB,CAAC,QAAgB;IAClC,IAAI,QAAQ,EAAE;MACZA,kBAAY,CAAC,oBAAoB,EAAE,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,CAAA;KAClE;GACF;EAED,iBAAiB;IACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;GAC3C;EAED,MAAM;IACJ,QACEC,QAACC,UAAI,IAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAC7DD,qBAAa,CACR,EACR;GACF;;;;;;;;;;;","names":["pick","Sizes","govHost","validateProp","h","Host"],"sources":["../../../packages/core/src/components/gov-form/group/constants.ts","../../../packages/core/src/components/gov-form/group/gov-form-group.scss?tag=gov-form-group","../../../packages/core/src/components/gov-form/group/gov-form-group.tsx"],"sourcesContent":["import { pick } from \"../../../utils/utils\"\nimport { Sizes } from \"../../../core/constants/sizes\"\nimport { ValueOf } from \"../../../types/interfaces\"\n\nexport const FormGroupSizes = pick(Sizes, ['_2XS', '_XS', '_S', '_M', '_L'])\nexport type FormGroupSizesType = `${ValueOf<typeof FormGroupSizes>}`\n\nexport enum FormGroupOrientation {\n\tHORIZONTAL = 'horizontal',\n\tVERTICAL = 'vertical',\n}\nexport type FormGroupOrientationType = `${ValueOf<typeof FormGroupOrientation>}`\n\nexport const FormGroupClass = {\n\troot: 'gov-form-group',\n}\n","$class: \".gov-form-group\";\n\n#{$class} {\n\t@include base(flex);\n\tflex-direction: column;\n\talign-items: flex-start;\n\t.gov-form-label__label {\n\t\tmargin: 0;\n\t}\n\n\t&[orientation=\"horizontal\"] {\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\t.gov-form-label__label {\n\t\t\twhite-space: nowrap;\n\t\t}\n\t}\n\n\t// VARIANTS\n\t@each $gap, $definitions in $form-group-gaps {\n\t\t&[gap=\"#{$gap}\"] {\n\t\t\tgap: get($gap, $sizes);\n\t\t}\n\t}\n}\n","import {Component, Element, h, Host, Prop, Watch} from \"@stencil/core\"\nimport {\n  FormGroupClass,\n  FormGroupOrientation,\n  FormGroupOrientationType,\n  FormGroupSizes,\n  FormGroupSizesType\n} from \"./constants\"\nimport {GovHost} from \"../../../helpers/Dom/template.types\"\nimport {govHost} from \"../../../helpers/Dom/template\"\nimport {validateProp} from \"../../../helpers/Validate/props\"\n\n@Component({\n  tag: \"gov-form-group\",\n  styleUrl: \"gov-form-group.scss\",\n})\nexport class GovFormGroup {\n  private readonly h: GovHost\n\n  constructor() {\n    this.h = govHost(this.host)\n  }\n\n  @Element() host: HTMLGovFormGroupElement\n  /**\n   * Gap's size.\n   */\n  @Prop() readonly gap?: FormGroupSizesType = undefined\n  /**\n   * Elements orientation\n   */\n  @Prop() readonly orientation?: FormGroupOrientationType = 'vertical'\n\n  @Watch(\"gap\")\n  validateGap(newValue: string): void {\n    if (newValue) {\n      validateProp(FormGroupSizes, newValue, FormGroupClass.root)\n    }\n  }\n\n  @Watch(\"orientation\")\n  validateOrientation(newValue: string): void {\n    if (newValue) {\n      validateProp(FormGroupOrientation, newValue, FormGroupClass.root)\n    }\n  }\n\n  componentWillLoad(): void {\n    this.validateGap(this.gap)\n    this.validateOrientation(this.orientation)\n  }\n\n  render() {\n    return (\n      <Host gap={this.gap} class={this.h.classes(FormGroupClass.root)}>\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n"],"version":3}
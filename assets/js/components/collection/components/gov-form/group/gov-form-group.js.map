{"version":3,"file":"gov-form-group.js","sourceRoot":"","sources":["../../../../../../../src/components/gov-form/group/gov-form-group.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,MAAM,eAAe,CAAA;AACtE,OAAO,EACL,cAAc,EACd,oBAAoB,EAEpB,cAAc,EAEf,MAAM,aAAa,CAAA;AAEpB,OAAO,EAAC,OAAO,EAAC,MAAM,+BAA+B,CAAA;AACrD,OAAO,EAAC,YAAY,EAAC,MAAM,iCAAiC,CAAA;AAM5D,MAAM,OAAO,YAAY;EAGvB;eAQ4C,SAAS;uBAIK,UAAU;IAXlE,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GAC5B;EAaD,WAAW,CAAC,QAAgB;IAC1B,IAAI,QAAQ,EAAE;MACZ,YAAY,CAAC,cAAc,EAAE,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,CAAA;KAC5D;EACH,CAAC;EAGD,mBAAmB,CAAC,QAAgB;IAClC,IAAI,QAAQ,EAAE;MACZ,YAAY,CAAC,oBAAoB,EAAE,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,CAAA;KAClE;EACH,CAAC;EAED,iBAAiB;IACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;EAC5C,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;MAC7D,eAAa,CACR,CACR,CAAA;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, Element, h, Host, Prop, Watch} from \"@stencil/core\"\nimport {\n  FormGroupClass,\n  FormGroupOrientation,\n  FormGroupOrientationType,\n  FormGroupSizes,\n  FormGroupSizesType\n} from \"./constants\"\nimport {GovHost} from \"../../../helpers/Dom/template.types\"\nimport {govHost} from \"../../../helpers/Dom/template\"\nimport {validateProp} from \"../../../helpers/Validate/props\"\n\n@Component({\n  tag: \"gov-form-group\",\n  styleUrl: \"gov-form-group.scss\",\n})\nexport class GovFormGroup {\n  private readonly h: GovHost\n\n  constructor() {\n    this.h = govHost(this.host)\n  }\n\n  @Element() host: HTMLGovFormGroupElement\n  /**\n   * Gap's size.\n   */\n  @Prop() readonly gap?: FormGroupSizesType = undefined\n  /**\n   * Elements orientation\n   */\n  @Prop() readonly orientation?: FormGroupOrientationType = 'vertical'\n\n  @Watch(\"gap\")\n  validateGap(newValue: string): void {\n    if (newValue) {\n      validateProp(FormGroupSizes, newValue, FormGroupClass.root)\n    }\n  }\n\n  @Watch(\"orientation\")\n  validateOrientation(newValue: string): void {\n    if (newValue) {\n      validateProp(FormGroupOrientation, newValue, FormGroupClass.root)\n    }\n  }\n\n  componentWillLoad(): void {\n    this.validateGap(this.gap)\n    this.validateOrientation(this.orientation)\n  }\n\n  render() {\n    return (\n      <Host gap={this.gap} class={this.h.classes(FormGroupClass.root)}>\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n"]}
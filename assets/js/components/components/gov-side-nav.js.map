{"version":3,"names":["govSideNavCss","GovSideNav","proxyCustomElement","H","componentDidLoad","this","host","querySelectorAll","SideNavItemClass","root","forEach","child","setAttribute","booleanString","inverse","compact","addEventListener","e","stopPropagation","govChange","emit","detail","componentDidRender","canValidateWcagOnRender","delay","validateWcag","render","h","Host","class","SideNavClass","wcagLabel","wcagLabelledBy","aside","role","validateWcagLabel"],"sources":["../../../packages/core/src/components/gov-side-nav/gov-side-nav.scss?tag=gov-side-nav","../../../packages/core/src/components/gov-side-nav/gov-side-nav.tsx"],"sourcesContent":["/*\n *   Side nav\n */\n\n$class: \".gov-side-nav\";\n\n#{$class} {\n\t@include base();\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop } from '@stencil/core'\nimport { SideNavClass, SideNavItemClass } from './constants'\nimport { GovSideNavItemCustomEvent } from '../../components'\nimport { GovSideNavItemChangeEvent } from './gov-side-nav-item.d'\nimport { validateWcagLabel } from '../../helpers/Validate/wcag'\nimport { canValidateWcagOnRender } from '../../helpers/Dom/win'\nimport { delay } from '../../utils/utils'\nimport { booleanString } from '../../helpers/Dom/template'\n\n@Component({\n\ttag: 'gov-side-nav',\n\tstyleUrl: 'gov-side-nav.scss',\n})\nexport class GovSideNav {\n\t@Element() readonly host: HTMLGovSideNavElement\n\n\t/**\n\t * Determide if component should have inversed colors to be used on dark background.\n\t */\n\t@Prop() readonly inverse: boolean = false\n\t/**\n\t * Determide if component should have compact styles.\n\t */\n\t@Prop() readonly compact: boolean = false\n\t/**\n\t * Adds accessible label for the sidenav that is only shown for screen readers.\n\t */\n\t@Prop({ attribute: 'wcag-label' }) readonly wcagLabel: string\n\t/**\n\t * String of id's that indicate alternative labels elements\n\t */\n\t@Prop({ attribute: 'wcag-labelled-by' }) readonly wcagLabelledBy: string\n\t/**\n\t * Called when the sidenav state changes\n\t */\n\t@Event({ eventName: 'gov-change' }) govChange: EventEmitter<GovSideNavItemChangeEvent>\n\n\tcomponentDidLoad() {\n\t\tthis.host.querySelectorAll(SideNavItemClass.root).forEach((child: HTMLGovSideNavItemElement) => {\n\t\t\tchild.setAttribute('inverse', booleanString(this.inverse))\n\t\t\tchild.setAttribute('compact', booleanString(this.compact))\n\t\t\tchild.addEventListener('gov-change', (e: GovSideNavItemCustomEvent<GovSideNavItemChangeEvent>) => {\n\t\t\t\te.stopPropagation()\n\t\t\t\tthis.govChange.emit(e.detail)\n\t\t\t})\n\t\t})\n\t}\n\n\tasync componentDidRender() {\n\t\tif (canValidateWcagOnRender()) {\n\t\t\tawait delay(500)\n\t\t\tawait this.validateWcag()\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Host class={SideNavClass.root} compact={this.compact} inverse={this.inverse} arial-label={this.wcagLabel} arial-labelledby={this.wcagLabelledBy}>\n\t\t\t\t<aside class={SideNavClass.aside} role={'list'}>\n\t\t\t\t\t<slot />\n\t\t\t\t</aside>\n\t\t\t</Host>\n\t\t)\n\t}\n\n\t/**\n\t * Validate the WCAG attributes of the component\n\t */\n\t@Method()\n\tasync validateWcag(): Promise<void> {\n\t\tvalidateWcagLabel(this.wcagLabel, this.wcagLabelledBy, SideNavClass.root)\n\t}\n}\n"],"mappings":"2PAAA,MAAMA,EAAgB,kZ,MCaTC,EAAUC,EAAA,MAAAD,UAAAE,E,+FAMc,M,aAIA,M,uDAcpC,gBAAAC,GACCC,KAAKC,KAAKC,iBAAiBC,EAAiBC,MAAMC,SAASC,IAC1DA,EAAMC,aAAa,UAAWC,EAAcR,KAAKS,UACjDH,EAAMC,aAAa,UAAWC,EAAcR,KAAKU,UACjDJ,EAAMK,iBAAiB,cAAeC,IACrCA,EAAEC,kBACFb,KAAKc,UAAUC,KAAKH,EAAEI,OAAO,GAC5B,G,CAIJ,wBAAMC,GACL,GAAIC,IAA2B,OACxBC,EAAM,WACNnB,KAAKoB,c,EAIb,MAAAC,GACC,OACCC,EAACC,EAAI,CAACC,MAAOC,EAAarB,KAAMM,QAASV,KAAKU,QAASD,QAAST,KAAKS,QAAO,cAAeT,KAAK0B,UAAS,mBAAoB1B,KAAK2B,gBACjIL,EAAA,SAAOE,MAAOC,EAAaG,MAAOC,KAAM,QACvCP,EAAA,c,CAUJ,kBAAMF,GACLU,EAAkB9B,KAAK0B,UAAW1B,KAAK2B,eAAgBF,EAAarB,K"}
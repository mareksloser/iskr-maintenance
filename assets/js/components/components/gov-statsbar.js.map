{"version":3,"names":["govStatsbarCss","GovStatsbar","proxyCustomElement","H","constructor","StatsBarVariants","PRIMARY","this","h","govHost","host","validateIconPosition","newValue","validateProp","StatsBarIconPosition","StatsBarClass","root","validateVariant","componentWillLoad","iconPosition","variant","componentDidLoad","querySelectorAll","StatsBarItemClass","forEach","node","setAttribute","render","Host","class","classes","section"],"sources":["../../../packages/core/src/components/gov-statsbar/gov-statsbar.scss?tag=gov-statsbar","../../../packages/core/src/components/gov-statsbar/gov-statsbar.tsx"],"sourcesContent":["/*\n *   Statsbar\n */\n\n$class: \".gov-statsbar\";\n\n#{$class} {\n\t@include base();\n\tpadding: rem-calc(20) 0;\n\t&__section {\n\t\t@include container();\n\t}\n\n\t// VARIANTS\n\t@each $variant, $definitions in $statsbar-variants {\n\t\t&[variant=\"#{$variant}\"] {\n\t\t\tbackground-color: #{get(\"bg-color\", $definitions)};\n\t\t\tcolor: #{get(\"text-color\", $definitions)};\n\n\t\t\t// STATES\n\t\t\t@include parameter(\"inverse\") {\n\t\t\t\tbackground: color(\"neutral.white\");\n\t\t\t\tcolor: #{get(\"text-color-inverse\", $definitions)};\n\t\t\t}\n\t\t}\n\t}\n\n\t// MQ\n\t@include mq($from: sm) {\n\t\t&__section {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: center;\n\t\t}\n\t}\n\t@include mq($from: md) {\n\t\tpadding: 0;\n\t}\n}\n","import { Component, Element, h, Host, Prop, Watch } from \"@stencil/core\"\nimport { validateProp } from \"../../helpers/Validate/props\"\nimport {\n\tStatsBarClass,\n\tStatsBarIconPosition,\n\tStatsBarIconPositionType,\n\tStatsBarItemClass,\n\tStatsBarVariants,\n\tStatsBarVariantType,\n} from \"./constants\"\nimport { GovHost } from \"../../helpers/Dom/template.types\"\nimport { govHost } from \"../../helpers/Dom/template\"\n\n@Component({\n\ttag: \"gov-statsbar\",\n\tstyleUrl: \"gov-statsbar.scss\",\n})\nexport class GovStatsbar {\n\tprivate h: GovHost\n\n\tconstructor() {\n\t\tthis.h = govHost(this.host)\n\t}\n\n\t@Element() host: HTMLGovStatsbarElement\n\n\t/**\n\t * Iconâ€™s position\n\t */\n\t@Prop({ attribute: \"icon-position\" }) readonly iconPosition?: StatsBarIconPositionType\n\t/**\n\t * Style variation\n\t */\n\t@Prop({ attribute: \"variant\" }) readonly variant?: StatsBarVariantType = StatsBarVariants.PRIMARY\n\n\t@Watch(\"iconPosition\")\n\tvalidateIconPosition(newValue: string): void {\n\t\tvalidateProp(StatsBarIconPosition, newValue, StatsBarClass.root)\n\t}\n\n\t@Watch(\"variant\")\n\tvalidateVariant(newValue: string): void {\n\t\tvalidateProp(StatsBarVariants, newValue, StatsBarClass.root)\n\t}\n\n\tcomponentWillLoad(): void {\n\t\tthis.validateIconPosition(this.iconPosition)\n\t\tthis.validateVariant(this.variant)\n\t}\n\n\tcomponentDidLoad() {\n\t\tthis.host.querySelectorAll(StatsBarItemClass.root).forEach((node: any) => {\n\t\t\tif (this.iconPosition === \"left\") {\n\t\t\t\tnode.setAttribute(\"icon-position\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Host class={this.h.classes(StatsBarClass.root)} variant={this.variant}>\n\t\t\t\t<section class={StatsBarClass.section}>\n\t\t\t\t\t<slot />\n\t\t\t\t</section>\n\t\t\t</Host>\n\t\t)\n\t}\n}\n"],"mappings":"qLAAA,MAAMA,EAAiB,83D,MCiBVC,EAAWC,EAAA,MAAAD,UAAAE,EAGvB,WAAAC,G,uEAayEC,EAAiBC,QAZzFC,KAAKC,EAAIC,EAAQF,KAAKG,K,CAevB,oBAAAC,CAAqBC,GACpBC,EAAaC,EAAsBF,EAAUG,EAAcC,K,CAI5D,eAAAC,CAAgBL,GACfC,EAAaR,EAAkBO,EAAUG,EAAcC,K,CAGxD,iBAAAE,GACCX,KAAKI,qBAAqBJ,KAAKY,cAC/BZ,KAAKU,gBAAgBV,KAAKa,Q,CAG3B,gBAAAC,GACCd,KAAKG,KAAKY,iBAAiBC,EAAkBP,MAAMQ,SAASC,IAC3D,GAAIlB,KAAKY,eAAiB,OAAQ,CACjCM,EAAKC,aAAa,gBAAiB,O,KAKtC,MAAAC,GACC,OACCnB,EAACoB,EAAI,CAACC,MAAOtB,KAAKC,EAAEsB,QAAQf,EAAcC,MAAOI,QAASb,KAAKa,SAC9DZ,EAAA,WAASqB,MAAOd,EAAcgB,SAC7BvB,EAAA,c"}
{"version":3,"names":["govTabsCss","GovTabs","proxyCustomElement","H","constructor","this","triggerRefs","h","govHost","host","formSelectId","createID","validateType","newValue","validateProp","TabTypes","TabsClass","root","validateVariant","TabVariants","componentWillLoad","prepareDataSource","componentDidRender","canValidateWcagOnRender","delay","validateWcag","resizeObserver","controller","promises","querySelectorAll","TabsItemClass","forEach","tab","controlItem","Promise","all","getIdentifier","getTriggerIdentifier","then","identifier","triggerIdentifier","isDefault","getAttribute","label","contentIdentifier","element","active","default","push","controllers","defaultTab","findIndex","focusIndex","reRender","setActiveByIdentifier","temp","map","item","control","setActiveStatus","ResizeObserver","throttle","observe","tabsRef","render","Host","class","classes","variant","type","role","ref","el","wcagLabel","wcagLabelledBy","onKeyDown","onKeydownHandler","bind","tabs","toBoolAttr","compactControls","list","index","btn","id","onClick","onSelectHandler","tabindex","tag","focusable","inverse","hidden","wcagSelectLabel","onChangeHandler","value","selected","getCurrentTab","find","govChange","emit","e","triggerId","target","stopPropagation","keyCode","includes","length","current","trigger","nodeName","toLowerCase","setFocus","focus","refresh","currentTab","setActiveTab","validateWcagProp","validateWcagLabel"],"sources":["../../../packages/core/src/components/gov-tabs/gov-tabs.scss?tag=gov-tabs","../../../packages/core/src/components/gov-tabs/gov-tabs.tsx"],"sourcesContent":["/*\n *   Tabs\n */\n\n$class: \".gov-tabs\";\n\n#{$class} {\n\t@include base();\n\t&__list {\n\t\t@extend %reset-ul;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tmargin: rem-calc(0 0 20);\n\t}\n\t&__list > &__item {\n\t\t@extend %reset-ul-li;\n\t\tdisplay: flex;\n\t\tmargin: 0;\n\t}\n\t&__btn {\n\t\t@include typography($font-size-s);\n\t\t@include button-core();\n\t\t@include focus-outline();\n\t\tmargin: 0;\n\t\tpadding: rem-calc(12 0 10);\n\t\tborder-bottom: rem-calc(2) solid transparent;\n\t\tfont-weight: 700;\n\t\ttext-align: center;\n\t\ttransition: $t linear color, $t linear border-color;\n\n\t}\n\n\t// VARIANTS\n\t@each $type, $definitions in $tabs-types {\n\t\t&[type=\"#{$type}\"] {\n\t\t\t#{$class} {\n\t\t\t\t&__list {\n\t\t\t\t\tgap: get(\"item-spacing\", $definitions);\n\t\t\t\t\t@if deep-map-check($definitions, \"border\") {\n\t\t\t\t\t\tborder-bottom: $tabs-list-border;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@each $variant, $definitions in $tabs-variants {\n\t\t&[variant=\"#{$variant}\"][type=\"text\"] {\n\t\t\t#{$class} {\n\t\t\t\t&__btn {\n\t\t\t\t\tcolor: get(\"color\", $definitions);\n\t\t\t\t\t@include hover() {\n\t\t\t\t\t\tcolor: get(\"color-hover\", $definitions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// STATES\n\t\t\t\t&__btn[aria-selected=\"true\"] {\n\t\t\t\t\tborder-bottom-color: get(\"color-active\", $definitions);\n\t\t\t\t\tcolor: get(\"color-active\", $definitions);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t&[orientation=\"vertical\"] {\n\t\t#{$class}__btn {\n\t\t\ttext-align: left;\n\t\t}\n\t}\n\n\t// MQ\n\t@include mq($from: xl) {\n\t\t&[orientation=\"vertical\"] {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\n\t\t\t#{$class}__list {\n\t\t\t\tflex-wrap: nowrap;\n\t\t\t\tflex-direction: column;\n\t\t\t\twidth: max-content;\n\t\t\t\tmax-width: 30vw;\n\t\t\t\tmargin-right: rem-calc(20);\n\t\t\t\tpadding: rem-calc(0 8);\n\t\t\t\tborder-bottom: none;\n\t\t\t\tborder-right: $tabs-list-border;\n\t\t\t}\n\n\t\t\t#{$class}__item {\n\t\t\t\tjustify-content: flex-end;\n\t\t\t}\n\n\t\t\t#{$class}__btn {\n\t\t\t\tpadding: rem-calc(8 12);\n\t\t\t\ttext-align: right;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from \"@stencil/core\"\nimport { validateProp } from \"../../helpers/Validate/props\"\nimport { TabOrientationType, TabsClass, TabsItemClass, TabType, TabTypes, TabVariants, VariantType } from \"./constants\"\nimport { GovTabControllerItem } from \"./gov-tabs.types\"\nimport { govHost, toBoolAttr } from \"../../helpers/Dom/template\"\nimport { validateWcagLabel, validateWcagProp } from \"../../helpers/Validate/wcag\"\nimport { canValidateWcagOnRender } from \"../../helpers/Dom/win\"\nimport { delay, throttle } from \"../../utils/utils\"\nimport { createID } from \"../../utils/string.utils\"\nimport { Nullable } from \"../../types/interfaces\"\nimport { GovHost } from \"../../helpers/Dom/template.types\"\n\n@Component({\n\ttag: \"gov-tabs\",\n\tstyleUrl: \"gov-tabs.scss\",\n})\nexport class GovTabs {\n\tprivate h: GovHost\n\tprivate triggerRefs: { [key: string]: HTMLButtonElement | HTMLGovChipElement } = {}\n\tprivate tabsRef?: HTMLDivElement\n\n\tprivate readonly formSelectId: string\n\n\tconstructor() {\n\t\tthis.h = govHost(this.host)\n\t\tthis.formSelectId = createID(\"GovFormSelect\")\n\t}\n\n\t@Element() host: HTMLGovTabsElement\n\t@State() controller: GovTabControllerItem[] = []\n\t@State() focusIndex = 0\n\t@State() compactControls = false\n\t/**\n\t * Tabs type\n\t */\n\t@Prop() readonly type: TabType = \"text\"\n\t/**\n\t * Style variation of the tab chips.\n\t */\n\t@Prop() readonly variant?: VariantType = \"primary\"\n\t/**\n\t * Tabs orientation\n\t */\n\t@Prop() readonly orientation: TabOrientationType = \"horizontal\"\n\t/**\n\t * Adds accessible label for the tabs that is only shown for screen readers.\n\t */\n\t@Prop({ attribute: \"wcag-label\" }) readonly wcagLabel: string\n\t/**\n\t * Adds accessible label for the tabs select\n\t */\n\t@Prop({ attribute: \"wcag-select-label\" }) readonly wcagSelectLabel: string\n\t/**\n\t * Indicates the id of a component that labels the tabs.\n\t */\n\t@Prop({ attribute: \"wcag-labelled-by\" }) readonly wcagLabelledBy: string\n\t/**\n\t * Emitted when the tab is changed.\n\t */\n\t@Event({ eventName: \"gov-change\" }) govChange: EventEmitter<HTMLGovTabsItemElement>\n\n\t@Watch(\"type\")\n\tvalidateType(newValue: string): void {\n\t\tvalidateProp(TabTypes, newValue, TabsClass.root)\n\t}\n\n\t@Watch(\"variant\")\n\tvalidateVariant(newValue: string): void {\n\t\tvalidateProp(TabVariants, newValue, TabsClass.root)\n\t}\n\n\tcomponentWillLoad() {\n\t\tthis.prepareDataSource()\n\t}\n\n\tasync componentDidRender() {\n\t\tif (canValidateWcagOnRender()) {\n\t\t\tawait delay(500)\n\t\t\tawait this.validateWcag()\n\t\t}\n\n\t\tthis.resizeObserver()\n\t}\n\n\tprivate prepareDataSource(): void {\n\t\tthis.controller = []\n\t\tconst promises: Promise<GovTabControllerItem>[] = []\n\t\tthis.host.querySelectorAll(TabsItemClass.root).forEach((tab: HTMLGovTabsItemElement) => {\n\t\t\tconst controlItem = Promise.all([\n\t\t\t\ttab.getIdentifier(),\n\t\t\t\ttab.getTriggerIdentifier(),\n\t\t\t]).then(([identifier, triggerIdentifier]) => {\n\t\t\t\tconst isDefault = typeof tab.getAttribute(\"default\") === \"string\"\n\t\t\t\treturn {\n\t\t\t\t\tlabel: tab.getAttribute(\"label\"),\n\t\t\t\t\tcontentIdentifier: identifier,\n\t\t\t\t\ttriggerIdentifier: triggerIdentifier,\n\t\t\t\t\telement: tab,\n\t\t\t\t\tactive: false,\n\t\t\t\t\tdefault: isDefault,\n\t\t\t\t}\n\t\t\t})\n\t\t\tpromises.push(controlItem)\n\t\t});\n\t\tPromise.all(promises).then(controllers => {\n\t\t\tlet defaultTab = controllers.findIndex(controller => controller.default)\n\t\t\tif (defaultTab === -1) defaultTab = 0\n\t\t\tthis.focusIndex = defaultTab\n\t\t\tcontrollers[defaultTab].active = true\n\t\t\tthis.controller = [...controllers]\n\t\t\tthis.reRender()\n\t\t})\n\t}\n\n\tprivate setActiveByIdentifier(identifier: string) {\n\t\tconst temp = []\n\t\tthis.controller.map(item => {\n\t\t\titem.active = identifier === item.triggerIdentifier || identifier === item.contentIdentifier\n\t\t\ttemp.push(item)\n\t\t})\n\t\tthis.controller = [...temp]\n\t}\n\n\tprivate reRender() {\n\t\tthis.controller.map(control => {\n\t\t\tcontrol.element.setActiveStatus(control.active)\n\t\t})\n\t}\n\n\t/*\n\tprivate evaluateControls() {\n\t\tthis.compactControls = false\n\t\tlet sumOfWidth = this.tabsRef.querySelector(\"ul\").offsetWidth\n\t\tthis.compactControls = this.tabsRef.offsetWidth < sumOfWidth\n\t}\n\t*/\n\n\tprivate resizeObserver() {\n\t\tconst resizeObserver = new ResizeObserver(\n\t\t\tthrottle(() => {\n\t\t\t\t// this.evaluateControls()\n\t\t\t}, 200),\n\t\t)\n\n\t\tresizeObserver.observe(this.tabsRef)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Host\n\t\t\t\tclass={this.h.classes(TabsClass.root)}\n\t\t\t\tvariant={this.variant}\n\t\t\t\ttype={this.type}\n\t\t\t\trole=\"tablist\"\n\t\t\t\tref={el => (this.tabsRef = el as HTMLDivElement)}\n\t\t\t\taria-label={this.wcagLabel}\n\t\t\t\taria-labelledby={this.wcagLabelledBy}\n\t\t\t\tonKeyDown={this.onKeydownHandler.bind(this)}\n\t\t\t>\n\t\t\t\t<div class={TabsClass.tabs} aria-hidden={toBoolAttr(this.compactControls)}>\n\t\t\t\t\t<ul class={TabsClass.list}>\n\t\t\t\t\t\t{this.controller.map((control, index) => (\n\t\t\t\t\t\t\t<li class={TabsClass.item}>\n\t\t\t\t\t\t\t\t{this.type == \"text\" ? (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={TabsClass.btn}\n\t\t\t\t\t\t\t\t\t\tid={control.triggerIdentifier}\n\t\t\t\t\t\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.onSelectHandler(control, index)}\n\t\t\t\t\t\t\t\t\t\taria-selected={toBoolAttr(control.active)}\n\t\t\t\t\t\t\t\t\t\taria-controls={control.contentIdentifier}\n\t\t\t\t\t\t\t\t\t\ttabindex={control.active ? 0 : -1}\n\t\t\t\t\t\t\t\t\t\tref={el => (this.triggerRefs[control.triggerIdentifier] = el as HTMLButtonElement)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{control.label}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<gov-chip\n\t\t\t\t\t\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t\t\t\t\t\ttag={'button'}\n\t\t\t\t\t\t\t\t\t\tidentifier={control.triggerIdentifier}\n\t\t\t\t\t\t\t\t\t\twcag-selected={control.active}\n\t\t\t\t\t\t\t\t\t\twcag-controls={control.contentIdentifier}\n\t\t\t\t\t\t\t\t\t\tfocusable={control.active}\n\t\t\t\t\t\t\t\t\t\tvariant={this.variant}\n\t\t\t\t\t\t\t\t\t\tinverse={!control.active}\n\t\t\t\t\t\t\t\t\t\tref={el => (this.triggerRefs[control.triggerIdentifier] = el as HTMLGovChipElement)}\n\t\t\t\t\t\t\t\t\t\ton-gov-click={() => this.onSelectHandler(control, index)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{control.label}\n\t\t\t\t\t\t\t\t\t</gov-chip>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<span id={this.formSelectId} hidden>\n\t\t\t\t\t{this.wcagSelectLabel}\n\t\t\t\t</span>\n\t\t\t\t{this.compactControls ? (\n\t\t\t\t\t<gov-form-select wcag-labelled-by={this.formSelectId} onGov-change={this.onChangeHandler.bind(this)}>\n\t\t\t\t\t\t{this.controller.map(control => (\n\t\t\t\t\t\t\t<option value={control.triggerIdentifier} selected={control.active}>\n\t\t\t\t\t\t\t\t{control.label}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</gov-form-select>\n\t\t\t\t) : null}\n\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t)\n\t}\n\n\tprivate getCurrentTab(): GovTabControllerItem | null {\n\t\treturn this.controller.find(control => control.active) || null\n\t}\n\n\tprivate onSelectHandler(control: GovTabControllerItem, index: number) {\n\t\tthis.focusIndex = index\n\t\tthis.setActiveByIdentifier(control.triggerIdentifier)\n\t\tthis.reRender()\n\t\tthis.govChange.emit(this.getCurrentTab().element)\n\t}\n\n\tprivate onChangeHandler(e: CustomEvent) {\n\t\tconst triggerId = (e.target as HTMLSelectElement).value\n\t\te.stopPropagation()\n\t\tthis.setActiveByIdentifier(triggerId)\n\t\tthis.reRender()\n\t\tthis.govChange.emit(this.getCurrentTab().element)\n\t}\n\n\tprivate onKeydownHandler(e: KeyboardEvent) {\n\t\tconst keyCode = e.keyCode\n\t\te.stopPropagation()\n\t\tif ([37, 38, 39, 40].includes(keyCode)) {\n\t\t\tif (false === (this.focusIndex >= 0 && this.focusIndex <= this.controller.length - 1)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.controller[this.focusIndex].active = false\n\n\t\t\tif (keyCode === 39 || keyCode === 40) {\n\t\t\t\tthis.focusIndex++\n\t\t\t\tif (this.focusIndex >= this.controller.length) {\n\t\t\t\t\tthis.focusIndex = 0\n\t\t\t\t}\n\t\t\t} else if (keyCode === 37 || keyCode === 38) {\n\t\t\t\tthis.focusIndex--\n\t\t\t\tif (this.focusIndex < 0) {\n\t\t\t\t\tthis.focusIndex = this.controller.length - 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.focusIndex >= 0 && this.focusIndex <= this.controller.length - 1) {\n\t\t\t\tconst current = this.controller[this.focusIndex]\n\t\t\t\tcurrent.active = true\n\t\t\t\tconst trigger = this.triggerRefs[current.triggerIdentifier]\n\t\t\t\tif(trigger.nodeName.toLowerCase() === 'gov-chip') {\n\t\t\t\t\t(this.triggerRefs[current.triggerIdentifier] as HTMLGovChipElement).setFocus()\n\t\t\t\t} else {\n\t\t\t\t\tthis.triggerRefs[current.triggerIdentifier].focus()\n\t\t\t\t}\n\n\t\t\t\tthis.controller = [...this.controller]\n\t\t\t\tthis.reRender()\n\t\t\t\tthis.govChange.emit(this.getCurrentTab().element)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Regenerate tabs controllers\n\t */\n\t@Method()\n\tasync refresh(): Promise<void> {\n\t\tthis.prepareDataSource()\n\t}\n\n\t/**\n\t * Returns the currently selected tabs-item\n\t */\n\t@Method()\n\tasync currentTab(): Promise<Nullable<HTMLGovTabsItemElement>> {\n\t\treturn this.getCurrentTab().element || null\n\t}\n\n\t/**\n\t * Regenerate tabs controllers\n\t */\n\t@Method()\n\tasync setActiveTab(identifier: string): Promise<void> {\n\t\tthis.setActiveByIdentifier(identifier)\n\t\tthis.reRender()\n\t}\n\n\t/**\n\t * Validate the WCAG attributes of the component\n\t */\n\t@Method()\n\tasync validateWcag(): Promise<void> {\n\t\tvalidateWcagProp(this.wcagSelectLabel, \"wcag-select-label\", TabsClass.root)\n\t\tvalidateWcagLabel(this.wcagLabel, this.wcagLabelledBy, TabsClass.root)\n\t}\n}\n"],"mappings":"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"}
{"version":3,"names":["FormAutocompleteSizes","pick","Sizes","FormAutocompleteVariants","Variants","FormAutocompleteClass","root","list","item","empty","loading","FormControlClass","holder","bottom","FormInputSizes","FormInputVariants","InputTypes","Type","FormInputClass","FormSelectSizes","FormSelectVariants","FormSelectClass","icon","FormMultiselectSizes","FormMultiselectVariants","FormMultiSelectClass","wrap","FormSwitchSizes","FormSwitchClass","input","indicator","FormCheckboxSizes","FormCheckboxClass","check","label","FormRadioSizes","FormRadioClass","govForm","govHost","passAttrToControl","name","value","this","control","setAttribute","passAttrToLabel","hasGroupChildren","querySelectorAll","length","hostElement","getParent","innerLabel","querySelector","FormLabelClass","mainElementsInControl","formElements","elements","map","el","join","Array","from","messageElements","FormMessageClass"],"sources":["../../../packages/core/src/components/gov-form/autocomplete/constants.ts","../../../packages/core/src/components/gov-form/control/constants.ts","../../../packages/core/src/components/gov-form/input/constants.ts","../../../packages/core/src/components/gov-form/select/constants.ts","../../../packages/core/src/components/gov-form/multiselect/constants.ts","../../../packages/core/src/components/gov-form/switch/constants.ts","../../../packages/core/src/components/gov-form/checkbox/constants.ts","../../../packages/core/src/components/gov-form/radio/constants.ts","../../../packages/core/src/helpers/Dom/form.ts"],"sourcesContent":["import { Sizes } from '../../../core/constants/sizes'\nimport { Variants } from '../../../core/constants/variants'\nimport { pick } from '../../../utils/utils'\nimport { ValueOf } from '../../../types/interfaces'\n\nexport const FormAutocompleteSizes = pick(Sizes, ['_M', '_L', '_XL'])\nexport type SizesType = `${ValueOf<typeof FormAutocompleteSizes>}`\n\nexport const FormAutocompleteVariants = pick(Variants, ['PRIMARY', 'SECONDARY'])\nexport type VariantType = `${ValueOf<typeof FormAutocompleteVariants>}`\n\nexport const FormAutocompleteClass = {\n\troot: 'gov-form-autocomplete',\n\tlist: 'gov-form-autocomplete__list',\n\titem: 'gov-form-autocomplete__item',\n\tempty: 'gov-form-autocomplete__item--empty',\n\tloading: 'gov-form-autocomplete__item--loading',\n}\n","import { Sizes } from '../../../core/constants/sizes'\nimport { pick } from '../../../utils/utils'\nimport { ValueOf } from '../../../types/interfaces'\n\nexport const FormControlSizes = pick(Sizes, ['_M', '_L', '_XL'])\nexport type FormControlSizesType = `${ValueOf<typeof FormControlSizes>}`\n\nexport const FormControlClass = {\n\troot: 'gov-form-control',\n\tholder: 'gov-form-control__holder',\n\tbottom: 'gov-form-control__bottom',\n}\n","import { Sizes } from '../../../core/constants/sizes'\nimport { Variants } from '../../../core/constants/variants'\nimport { ValueOf } from '../../../types/interfaces'\nimport { pick } from '../../../utils/utils'\n\nexport const FormInputSizes = pick(Sizes, ['_S', '_M', '_L', '_XL'])\nexport type FormInputSizesType = `${ValueOf<typeof FormInputSizes>}`\n\nexport const FormInputVariants = pick(Variants, ['PRIMARY', 'SECONDARY'])\nexport type FormInputVariantType = `${ValueOf<typeof FormInputVariants>}`\n\nexport enum InputTypes {\n\tCOLOR = 'color',\n\tDATE = 'date',\n\tDATETIME_LOCAL = 'datetime-local',\n\tEMAIL = 'email',\n\tMONTH = 'month',\n\tNUMBER = 'number',\n\tPASSWORD = 'password',\n\tSEARCH = 'search',\n\tTEL = 'tel',\n\tTEXT = 'text',\n\tTIME = 'time',\n\tURL = 'url',\n\tWEEK = 'week',\n}\n\nexport type InputType = `${ValueOf<typeof InputTypes>}`\n\nexport enum Type {\n\tRESET = 'reset',\n}\n\nexport type TypesType = `${ValueOf<typeof Type>}`\n\nexport const FormInputClass = {\n\troot: 'gov-form-input',\n}\n","import { Sizes } from '../../../core/constants/sizes'\nimport { Variants } from '../../../core/constants/variants'\nimport { pick } from '../../../utils/utils'\nimport { ValueOf } from '../../../types/interfaces'\n\nexport const FormSelectSizes = pick(Sizes, ['_M', '_L', '_XL'])\nexport type FormSelectSizesType = `${ValueOf<typeof FormSelectSizes>}`\n\nexport const FormSelectVariants = pick(Variants, ['PRIMARY', 'SECONDARY'])\nexport type FormSelectVariantType = `${ValueOf<typeof FormSelectVariants>}`\n\nexport const FormSelectClass = {\n\troot: 'gov-form-select',\n\ticon: 'gov-form-select__icon',\n}\n","import { Sizes } from '../../../core/constants/sizes'\nimport { Variants } from '../../../core/constants/variants'\nimport { pick } from '../../../utils/utils'\nimport { ValueOf } from '../../../types/interfaces'\n\nexport const FormMultiselectSizes = pick(Sizes, ['_M', '_L', '_XL'])\nexport type FormMultiselectSizesType = `${ValueOf<typeof FormMultiselectSizes>}`\n\nexport const FormMultiselectVariants = pick(Variants, ['PRIMARY', 'SECONDARY'])\nexport type FormMultiselectVariantType = `${ValueOf<typeof FormMultiselectVariants>}`\n\nexport const FormMultiSelectClass = {\n\troot: 'gov-form-multi-select',\n\twrap: 'gov-form-multi-select__wrap',\n\tlist: 'gov-form-multi-select__list',\n\titem: 'gov-form-multi-select__item',\n}\n","import { Sizes } from '../../../core/constants/sizes'\nimport { ValueOf } from '../../../types/interfaces'\nimport { pick } from '../../../utils/utils'\n\nexport const FormSwitchSizes = pick(Sizes, ['_XS', '_S', '_M', '_L'])\nexport type FormSwitchSizesType = `${ValueOf<typeof FormSwitchSizes>}`\n\nexport const FormSwitchClass = {\n\troot: 'gov-form-switch',\n\tholder: 'gov-form-switch__holder',\n\tinput: 'gov-form-switch__input',\n\tindicator: 'gov-form-switch__indicator',\n}\n","import { Sizes } from '../../../core/constants/sizes'\nimport { pick } from '../../../utils/utils'\nimport { ValueOf } from '../../../types/interfaces'\n\nexport const FormCheckboxSizes = pick(Sizes, ['_XS', '_S', '_M', '_L'])\nexport type FormCheckboxSizesType = `${ValueOf<typeof FormCheckboxSizes>}`\n\nexport const FormCheckboxClass = {\n\troot: 'gov-form-checkbox',\n\tcheck: 'gov-form-checkbox__check',\n\tlabel: 'gov-form-checkbox__label',\n}\n","import { Sizes } from '../../../core/constants/sizes'\nimport { pick } from '../../../utils/utils'\nimport { ValueOf } from '../../../types/interfaces'\n\nexport const FormRadioSizes = pick(Sizes, ['_XS', '_S', '_M', '_L'])\nexport type FormRadioSizesType = `${ValueOf<typeof FormRadioSizes>}`\n\nexport const FormRadioClass = {\n\troot: 'gov-form-radio',\n\tholder: 'gov-form-radio__holder',\n\tinput: 'gov-form-radio__input',\n\tindicator: 'gov-form-radio__indicator',\n\tlabel: 'gov-form-radio__label',\n}\n","import { GovHost } from './template.types'\nimport { GovForm } from './form.types'\nimport { FormControlClass } from '../../components/gov-form/control/constants'\nimport { FormInputClass } from '../../components/gov-form/input/constants'\nimport { FormSelectClass } from '../../components/gov-form/select/constants'\nimport { FormMultiSelectClass } from '../../components/gov-form/multiselect/constants'\nimport { FormSwitchClass } from '../../components/gov-form/switch/constants'\nimport { FormCheckboxClass } from '../../components/gov-form/checkbox/constants'\nimport { FormRadioClass } from '../../components/gov-form/radio/constants'\nimport { FormMessageClass } from '../../components/gov-form/message/constants'\nimport { FormAutocompleteClass } from '../../components/gov-form/autocomplete/constants'\nimport { Nullable } from '../../types/interfaces'\nimport { FormLabelClass } from \"../../components/gov-form/label/constants\"\n\nexport const govForm = (govHost: GovHost): GovForm => {\n\treturn {\n\t\tget govHost(): GovHost {\n\t\t\treturn govHost\n\t\t},\n\t\tpassAttrToControl(name: string, value: string): void {\n\t\t\tif (this.control) {\n\t\t\t\tthis.control.setAttribute(name, value)\n\t\t\t}\n\t\t},\n\t\tpassAttrToLabel(name: string, value: string): void {\n\t\t\tif (this.label) {\n\t\t\t\tthis.label.setAttribute(name, value)\n\t\t\t}\n\t\t},\n\t\tget hasGroupChildren(): boolean {\n\t\t\tif (this.control) {\n\t\t\t\treturn this.control.querySelectorAll('gov-form-group > *').length > 1\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t\tget control(): Nullable<HTMLGovFormControlElement> {\n\t\t\tif (this.govHost.name === FormControlClass.root) {\n\t\t\t\treturn this.govHost.hostElement\n\t\t\t}\n\t\t\treturn this.govHost.getParent(FormControlClass.root)\n\t\t},\n\t\tget label(): Nullable<HTMLGovFormLabelElement> {\n\t\t\tconst innerLabel = this.govHost.hostElement.querySelector(`.${FormLabelClass.root}`)\n\t\t\tif(innerLabel) {\n\t\t\t\treturn innerLabel\n\t\t\t}\n\t\t\tif (this.control) {\n\t\t\t\treturn this.control.querySelector(`.${FormLabelClass.root}`)\n\t\t\t}\n\t\t\treturn null\n\t\t},\n\t\tget mainElementsInControl(): Element[] {\n\t\t\tconst formElements = [\n\t\t\t\tFormSelectClass.root,\n\t\t\t\tFormInputClass.root,\n\t\t\t\tFormSwitchClass.root,\n\t\t\t\tFormCheckboxClass.root,\n\t\t\t\tFormRadioClass.root,\n\t\t\t\tFormMultiSelectClass.root,\n\t\t\t\tFormAutocompleteClass.root,\n\t\t\t]\n\t\t\tif (this.control) {\n\t\t\t\tconst elements = formElements.map(el => `${el}:first-of-type`).join(', ')\n\t\t\t\treturn Array.from(this.control.querySelectorAll(elements))\n\t\t\t}\n\t\t\treturn []\n\t\t},\n\t\tget messageElements(): HTMLGovFormMessageElement[] {\n\t\t\tif (this.control) {\n\t\t\t\treturn Array.from(this.control.querySelectorAll(FormMessageClass.root))\n\t\t\t}\n\t\t\treturn []\n\t\t},\n\t}\n}\n"],"mappings":"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"}
{"version":3,"names":["govWizardCss","GovWizard","proxyCustomElement","H","constructor","this","h","govHost","host","validateSize","newValue","validateProp","WizardSizes","WizardClass","root","componentWillLoad","size","componentDidLoad","querySelectorAll","WizardItemClass","forEach","child","setAttribute","componentDidRender","canValidateWcagOnRender","delay","validateWcag","render","Host","class","classes","role","validateWcagLabel","wcagLabel","wcagLabelledBy"],"sources":["../../../packages/core/src/components/gov-wizard/gov-wizard.scss?tag=gov-wizard","../../../packages/core/src/components/gov-wizard/gov-wizard.tsx"],"sourcesContent":["/*\n *   Wizard\n */\n\n$class: \".gov-wizard\";\n\n#{$class} {\n\t@include base();\n\t@include reset-last-margin();\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, Watch } from \"@stencil/core\"\nimport { validateProp } from \"../../helpers/Validate/props\"\nimport { WizardSizes, WizardSizesType, WizardClass, WizardItemClass } from \"./constants\"\nimport { GovWizardItemChangeEvent } from \"./gov-wizard-item.d\"\nimport { govHost } from \"../../helpers/Dom/template\"\nimport { GovHost } from \"../../helpers/Dom/template.types\"\nimport { validateWcagLabel } from \"../../helpers/Validate/wcag\"\nimport { canValidateWcagOnRender } from \"../../helpers/Dom/win\"\nimport { delay } from \"../../utils/utils\"\n\n@Component({\n\ttag: \"gov-wizard\",\n\tstyleUrl: \"gov-wizard.scss\",\n})\nexport class GovWizard {\n\tprivate h: GovHost\n\n\t@Element() readonly host: HTMLGovWizardElement\n\n\tconstructor() {\n\t\tthis.h = govHost(this.host)\n\t}\n\n\t/**\n\t * Size of wizard\n\t */\n\t@Prop() readonly size?: WizardSizesType = \"m\"\n\t/**\n\t * Adds accessible label for the wizard that is only shown for screen readers.\n\t */\n\t@Prop({ attribute: \"wcag-label\" }) readonly wcagLabel: string\n\t/**\n\t * String of id's that indicate alternative labels elements\n\t */\n\t@Prop({ attribute: \"wcag-labelled-by\" }) readonly wcagLabelledBy: string\n\t/**\n\t * Called when the wizard children state changes\n\t */\n\t@Event({ eventName: \"gov-change\" }) govChange: EventEmitter<GovWizardItemChangeEvent>\n\n\t@Watch(\"size\")\n\tprivate validateSize(newValue: string): void {\n\t\tvalidateProp(WizardSizes, newValue, WizardClass.root)\n\t}\n\n\tcomponentWillLoad(): void {\n\t\tthis.validateSize(this.size)\n\t}\n\n\tcomponentDidLoad() {\n\t\tthis.host.querySelectorAll(WizardItemClass.root).forEach((child: HTMLGovWizardItemElement) => {\n\t\t\tchild.setAttribute(\"size\", this.size)\n\t\t\t/*\n\t\t\tchild.addEventListener('gov-change', (e: GovWizardItemCustomEvent<GovWizardItemChangeEvent>) => {\n\t\t\t\te.stopPropagation()\n\t\t\t\tthis.govChange.emit(e.detail)\n\t\t\t})\n\t\t\t*/\n\t\t})\n\t}\n\n\tasync componentDidRender() {\n\t\tif (canValidateWcagOnRender()) {\n\t\t\tawait delay(500)\n\t\t\tawait this.validateWcag()\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Host class={this.h.classes(WizardClass.root)} role=\"list\" size={this.size}>\n\t\t\t\t<slot />\n\t\t\t</Host>\n\t\t)\n\t}\n\n\t/**\n\t * Validate the WCAG attributes of the component\n\t */\n\t@Method()\n\tpublic async validateWcag(): Promise<void> {\n\t\tvalidateWcagLabel(this.wcagLabel, this.wcagLabelledBy, WizardClass.root)\n\t}\n}\n"],"mappings":"sSAAA,MAAMA,EAAe,yb,MCcRC,EAASC,EAAA,MAAAD,UAAAE,EAKrB,WAAAC,G,8EAO0C,I,uDANzCC,KAAKC,EAAIC,EAAQF,KAAKG,K,CAqBf,YAAAC,CAAaC,GACpBC,EAAaC,EAAaF,EAAUG,EAAYC,K,CAGjD,iBAAAC,GACCV,KAAKI,aAAaJ,KAAKW,K,CAGxB,gBAAAC,GACCZ,KAAKG,KAAKU,iBAAiBC,EAAgBL,MAAMM,SAASC,IACzDA,EAAMC,aAAa,OAAQjB,KAAKW,KAAK,G,CAUvC,wBAAMO,GACL,GAAIC,IAA2B,OACxBC,EAAM,WACNpB,KAAKqB,c,EAIb,MAAAC,GACC,OACCrB,EAACsB,EAAI,CAACC,MAAOxB,KAAKC,EAAEwB,QAAQjB,EAAYC,MAAOiB,KAAK,OAAOf,KAAMX,KAAKW,MACrEV,EAAA,a,CASI,kBAAMoB,GACZM,EAAkB3B,KAAK4B,UAAW5B,KAAK6B,eAAgBrB,EAAYC,K"}